<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.naiveadmin.server.mapper.SysAuthMapper">

    <!-- 用户认证信息结果映射 -->
    <resultMap id="UserAuthMap" type="com.naiveadmin.server.entity.SysUser">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="status" property="status"/>
        <result column="deleted" property="deleted"/>
        <collection property="roles" ofType="com.naiveadmin.server.entity.SysRole">
            <id column="role_id" property="id"/>
            <result column="role_code" property="code"/>
        </collection>
    </resultMap>

    <!-- 根据用户名查询用户认证信息 -->
    <select id="selectUserAuthByUsername" resultMap="UserAuthMap">
        SELECT 
            u.id,
            u.username,
            u.password,
            u.status,
            u.deleted,
            r.id as role_id,
            r.code as role_code
        FROM sys_user u
        LEFT JOIN sys_user_role ur ON u.id = ur.user_id
        LEFT JOIN sys_role r ON ur.role_id = r.id AND r.deleted = 0 AND r.status = 1
        WHERE u.username = #{username}
        AND u.deleted = 0
    </select>

    <!-- 根据用户ID查询权限列表 -->
    <select id="selectPermissionsByUserId" resultType="string">
        SELECT DISTINCT m.permission
        FROM sys_menu m
        INNER JOIN sys_role_menu rm ON m.id = rm.menu_id
        INNER JOIN sys_user_role ur ON rm.role_id = ur.role_id
        WHERE ur.user_id = #{userId}
        AND m.deleted = 0
        AND m.status = 1
        AND m.type = 'F'
        AND m.permission IS NOT NULL
    </select>

    <!-- 更新用户最后登录时间 -->
    <update id="updateUserLoginTime">
        UPDATE sys_user
        SET last_login_time = CURRENT_TIMESTAMP
        WHERE id = #{userId}
    </update>

    <!-- 更新用户密码 -->
    <update id="updateUserPassword">
        UPDATE sys_user
        SET password = #{newPassword}
        WHERE id = #{userId}
        AND password = #{oldPassword}
    </update>

    <!-- 重置用户密码 -->
    <update id="resetUserPassword">
        UPDATE sys_user
        SET password = #{password}
        WHERE id = #{userId}
    </update>
</mapper> 